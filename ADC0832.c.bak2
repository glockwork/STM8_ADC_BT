#ifndef ADC0832_H
#define ADC0832_H
#include "stm8s.h"

#define uchar unsigned char

#define CLK_GPIO_PORT  (GPIOC)
#define CLK_GPIO_PINS  (GPIO_PIN_3)
#define DI_GPIO_PORT  (GPIOC)
#define DI_GPIO_PINS  (GPIO_PIN_4)
#define DO_GPIO_PORT  (GPIOC)
#define DO_GPIO_PINS  (GPIO_PIN_4)
#define CS_GPIO_PORT  (GPIOC)
#define CS_GPIO_PINS  (GPIO_PIN_1)

/********************************************************
函数名称:void GPIO_init()
函数作用:初始化GPIO
参数说明:i=0,表示输出，i=1，表示输入
********************************************************/

void GPIO_init(uchar i)
{
  if( i == 0)
    GPIO_Init(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS, GPIO_MODE_OUT_PP_LOW_FAST);
  if( i == 1)
    GPIO_Init(DO_GPIO_PORT, (GPIO_Pin_TypeDef)DO_GPIO_PINS, GPIO_MODE_IN_PU_NO_IT);
  asm("nop");
  asm("nop");
}

/********************************************************
函数名称:uchar GetAD0832()
函数作用:初始化获取ADC转换值
参数说明:Channel=0,表示通道CH0，Channel=1，表示通道CH1
********************************************************/

uchar GetAD0832(uchar Channel)
{
    uchar i=0, Data1 = 0 , Data2 = 0;
    GPIO_WriteLow(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS) ;//时钟置低平//时钟12Mhz， 整个转换时间为224us
    asm("nop");
    asm("nop");

    GPIO_init(0);
    //使用芯片准备（参考PDF时序图）
    GPIO_WriteHigh(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS);          //开始信号为高电平
    asm("nop");
    asm("nop");
    GPIO_WriteLow(CS_GPIO_PORT, (GPIO_Pin_TypeDef)CS_GPIO_PINS);          //片选信号置低，启动AD转换芯片
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //输入开始信号（构成一个正脉冲）,时钟上升沿，输入开始信号
    asm("nop");
    asm("nop");
    GPIO_WriteLow(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //时钟下降沿    //模拟信号输入模式选择（1：单模信号，0：双模差分信号）
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS);
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //时钟上升沿，输入开始信号
    asm("nop");
    asm("nop");
    GPIO_WriteLow(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //时钟下降沿
    asm("nop");
    asm("nop");

    //模拟信号输入通道选择（1：通道CH1，0：通道CH0）
    if(Channel==0)
    {GPIO_WriteLow(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS);} //选择通道0
    asm("nop");
    asm("nop");
    if(Channel==1)
    {GPIO_WriteHigh(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS);} //选择通道0
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //时钟上升沿，输入开始信号
    asm("nop");
    asm("nop");
    GPIO_WriteLow(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //时钟下降沿
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS);      //数据线置高，准备接收数据
    asm("nop");
    asm("nop");
    GPIO_init(i);
    for(i=0;i<8;i++)  //从高位移入数据
    {
        GPIO_WriteHigh(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);
        asm("nop");
        asm("nop");
        GPIO_WriteLow(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);         //时钟下降沿,AD0832输出数据，高位（MSB）先
        asm("nop");
        asm("nop");
        Data1 = Data1<<1;    //数据左移位，补0
        if(GPIO_ReadInputPin(DO_GPIO_PORT, (GPIO_Pin_TypeDef)DO_GPIO_PINS) !=0)
            {Data1 = Data1 | 0x01;} //如果数据为“1”，移入1，
    }//如果数据为“0”，移入0，

    for(i=0;i<8;i++)      //从低位移入数据
    {
        Data2 = Data2>>1;   //数据左移位，补0
        if(GPIO_ReadInputPin(DO_GPIO_PORT, (GPIO_Pin_TypeDef)DO_GPIO_PINS) !=0)
            {Data2 = Data2 | 0x80;}   //如果数据为“1”，移入1如果数据为“0”，移入0，
        GPIO_WriteHigh(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);
        asm("nop");
        asm("nop");
        GPIO_WriteLow(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);          //时钟下降沿,AD0832输出数据，高位（MSB）先
        asm("nop");
        asm("nop");
    }
    //数据线置高，释放总线，完成一次转换
    GPIO_WriteHigh(CLK_GPIO_PORT, (GPIO_Pin_TypeDef)CLK_GPIO_PINS);
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(DI_GPIO_PORT, (GPIO_Pin_TypeDef)DI_GPIO_PINS);
    asm("nop");
    asm("nop");
    GPIO_WriteHigh(CS_GPIO_PORT, (GPIO_Pin_TypeDef)CS_GPIO_PINS);
    asm("nop");
    asm("nop");

    if(Data1==Data2)     //输出
    {return Data2;}
}
#endif
